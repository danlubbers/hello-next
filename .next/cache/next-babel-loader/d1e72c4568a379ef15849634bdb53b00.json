{"ast":null,"code":"var _jsxFileName = \"/Users/danlubbers/Documents/GitHub/pluralsight-tutorials/hello-next/src/ImageToggleOnScroll.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from 'react';\n\nconst ImageToggleOnScroll = ({\n  primaryImage,\n  secondaryImage\n}) => {\n  const imageRef = useRef(null);\n  const {\n    0: inView,\n    1: setInView\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n\n  const isInView = () => {\n    if (imageRef.current) {\n      const rect = imageRef.current.getBoundingClientRect();\n      return rect.top >= 0 && rect.bottom <= window.innerHeight;\n    }\n  };\n\n  const scrollHandler = () => {\n    setInView(() => {\n      return isInView();\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", scrollHandler);\n    setInView(isInView());\n    return () => {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: inView ? primaryImage : secondaryImage,\n    alt: \"\",\n    width: \"800px\",\n    ref: imageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ImageToggleOnScroll;","map":{"version":3,"sources":["/Users/danlubbers/Documents/GitHub/pluralsight-tutorials/hello-next/src/ImageToggleOnScroll.js"],"names":["React","useRef","useEffect","useState","ImageToggleOnScroll","primaryImage","secondaryImage","imageRef","inView","setInView","isLoading","setIsLoading","isInView","current","rect","getBoundingClientRect","top","bottom","window","innerHeight","scrollHandler","addEventListener","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,MAAjB,EAAyBC,SAAzB,EAAoCC,QAApC,QAAoD,OAApD;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAD,KAAoC;AAEhE,QAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM;AAAA,OAACO,MAAD;AAAA,OAASC;AAAT,MAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACO,SAAD;AAAA,OAAYC;AAAZ,MAA4BR,QAAQ,CAAC,IAAD,CAA1C;;AAGA,QAAMS,QAAQ,GAAG,MAAM;AACrB,QAAIL,QAAQ,CAACM,OAAb,EAAsB;AACpB,YAAMC,IAAI,GAAGP,QAAQ,CAACM,OAAT,CAAiBE,qBAAjB,EAAb;AACA,aAAOD,IAAI,CAACE,GAAL,IAAY,CAAZ,IAAiBF,IAAI,CAACG,MAAL,IAAeC,MAAM,CAACC,WAA9C;AACD;AACF,GALD;;AAOA,QAAMC,aAAa,GAAG,MAAM;AAC1BX,IAAAA,SAAS,CAAC,MAAM;AACd,aAAOG,QAAQ,EAAf;AACD,KAFQ,CAAT;AAGD,GAJD;;AAMAV,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCD,aAAlC;AACAX,IAAAA,SAAS,CAACG,QAAQ,EAAT,CAAT;AACA,WAAS,MAAM;AACbM,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCF,aAArC;AAED,KAHD;AAID,GAPQ,CAAT;AAUE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAEE,IAAA,GAAG,EAAEZ,MAAM,GAAGH,YAAH,GAAkBC,cAF/B;AAE+C,IAAA,GAAG,EAAC,EAFnD;AAEsD,IAAA,KAAK,EAAC,OAF5D;AAEoE,IAAA,GAAG,EAAEC,QAFzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAQD,CAtCD;;AAwCA,eAAeH,mBAAf","sourcesContent":["import React,  { useRef, useEffect, useState } from 'react'\n\nconst ImageToggleOnScroll = ({primaryImage, secondaryImage}) => {\n\nconst imageRef = useRef(null);\nconst [inView, setInView] = useState(false);\nconst [isLoading, setIsLoading] = useState(true);\n\n\nconst isInView = () => {\n  if (imageRef.current) {\n    const rect = imageRef.current.getBoundingClientRect();\n    return rect.top >= 0 && rect.bottom <= window.innerHeight;\n  }\n}\n\nconst scrollHandler = () => {\n  setInView(() => {\n    return isInView();\n  })\n}\n\nuseEffect(() => {\n  window.addEventListener(\"scroll\", scrollHandler);\n  setInView(isInView());\n  return ( () => {\n    window.removeEventListener(\"scroll\", scrollHandler);\n\n  }) \n})\n\n\n  return (\n    <div>\n      <img \n\n        src={inView ? primaryImage : secondaryImage} alt=\"\" width='800px' ref={imageRef}\n        />\n    </div>\n  )\n}\n\nexport default ImageToggleOnScroll;"]},"metadata":{},"sourceType":"module"}