{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/danlubbers/Documents/GitHub/pluralsight-tutorials/hello-next/src/ImageToggleOnScroll.js\";\n\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from 'react';\n\nvar ImageToggleOnScroll = function ImageToggleOnScroll(_ref) {\n  var primaryImage = _ref.primaryImage,\n      secondaryImage = _ref.secondaryImage;\n  var imageRef = useRef(null);\n\n  var _useState = useState(false),\n      inView = _useState[0],\n      setInView = _useState[1];\n\n  useEffect(function () {\n    window.addEventListener(\"scroll\", scrollHandler);\n    setInView(isInView());\n    return function () {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  });\n\n  var isInView = function isInView() {\n    if (imageRef.current) {\n      var rect = imageRef.current.getBoundingClientRect();\n      console.log({\n        rect: rect\n      });\n      return rect.top >= 0 && rect.bottom <= window.innerHeight;\n    }\n  };\n\n  var scrollHandler = function scrollHandler() {\n    setInView(function () {\n      return isInView();\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: inView ? primaryImage : secondaryImage,\n    alt: \"\",\n    width: \"800px\",\n    ref: imageRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ImageToggleOnScroll;","map":{"version":3,"sources":["/Users/danlubbers/Documents/GitHub/pluralsight-tutorials/hello-next/src/ImageToggleOnScroll.js"],"names":["React","useRef","useEffect","useState","ImageToggleOnScroll","primaryImage","secondaryImage","imageRef","inView","setInView","window","addEventListener","scrollHandler","isInView","removeEventListener","current","rect","getBoundingClientRect","console","log","top","bottom","innerHeight"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAiBC,MAAjB,EAAyBC,SAAzB,EAAoCC,QAApC,QAAoD,OAApD;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAoC;AAAA,MAAlCC,YAAkC,QAAlCA,YAAkC;AAAA,MAApBC,cAAoB,QAApBA,cAAoB;AAEhE,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;;AAFgE,kBAGpCE,QAAQ,CAAC,KAAD,CAH4B;AAAA,MAGzDK,MAHyD;AAAA,MAGjDC,SAHiD;;AAMhEP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,aAAlC;AACAH,IAAAA,SAAS,CAACI,QAAQ,EAAT,CAAT;AACA,WAAS,YAAM;AACbH,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCF,aAArC;AAED,KAHD;AAID,GAPQ,CAAT;;AASA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAIN,QAAQ,CAACQ,OAAb,EAAsB;AACpB,UAAMC,IAAI,GAAGT,QAAQ,CAACQ,OAAT,CAAiBE,qBAAjB,EAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACH,QAAAA,IAAI,EAAJA;AAAD,OAAZ;AACA,aAAOA,IAAI,CAACI,GAAL,IAAY,CAAZ,IAAiBJ,IAAI,CAACK,MAAL,IAAeX,MAAM,CAACY,WAA9C;AACD;AACF,GAND;;AAQA,MAAMV,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BH,IAAAA,SAAS,CAAC,YAAM;AACd,aAAOI,QAAQ,EAAf;AACD,KAFQ,CAAT;AAGD,GAJD;;AAME,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAEE,IAAA,GAAG,EAAEL,MAAM,GAAGH,YAAH,GAAkBC,cAF/B;AAE+C,IAAA,GAAG,EAAC,EAFnD;AAEsD,IAAA,KAAK,EAAC,OAF5D;AAEoE,IAAA,GAAG,EAAEC,QAFzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAQD,CArCD;;AAuCA,eAAeH,mBAAf","sourcesContent":["import React,  { useRef, useEffect, useState } from 'react'\n\nconst ImageToggleOnScroll = ({primaryImage, secondaryImage}) => {\n\nconst imageRef = useRef(null);\nconst [inView, setInView] = useState(false);\n\n\nuseEffect(() => {\n  window.addEventListener(\"scroll\", scrollHandler);\n  setInView(isInView());\n  return ( () => {\n    window.removeEventListener(\"scroll\", scrollHandler);\n    \n  }) \n})\n\nconst isInView = () => {\n  if (imageRef.current) {\n    const rect = imageRef.current.getBoundingClientRect();\n    console.log({rect})\n    return rect.top >= 0 && rect.bottom <= window.innerHeight;\n  }\n}\n\nconst scrollHandler = () => {\n  setInView(() => {\n    return isInView();\n  })\n}\n\n  return (\n    <div>\n      <img \n\n        src={inView ? primaryImage : secondaryImage} alt=\"\" width='800px' ref={imageRef}\n        />\n    </div>\n  )\n}\n\nexport default ImageToggleOnScroll;"]},"metadata":{},"sourceType":"module"}